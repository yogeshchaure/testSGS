package com.sgs.model.entity;

import com.sgs.model.service.SGSAppModuleImpl;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed May 19 16:24:28 IST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SgsArReceiptDtlImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        ReceiptDtlId,
        BuId,
        ArReceiptId,
        AccRecInvoicesId,
        AmountPaid,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    private static final ADFLogger LOG = ADFLogger.createADFLogger(SgsArReceiptDtlImpl.class);


    public static final int RECEIPTDTLID = AttributesEnum.ReceiptDtlId.index();
    public static final int BUID = AttributesEnum.BuId.index();
    public static final int ARRECEIPTID = AttributesEnum.ArReceiptId.index();
    public static final int ACCRECINVOICESID = AttributesEnum.AccRecInvoicesId.index();
    public static final int AMOUNTPAID = AttributesEnum.AmountPaid.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SgsArReceiptDtlImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sgs.model.entity.SgsArReceiptDtl");
    }


    /**
     * Gets the attribute value for ReceiptDtlId, using the alias name ReceiptDtlId.
     * @return the value of ReceiptDtlId
     */
    public Integer getReceiptDtlId() {
        return (Integer) getAttributeInternal(RECEIPTDTLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceiptDtlId.
     * @param value value to set the ReceiptDtlId
     */
    public void setReceiptDtlId(Integer value) {
        setAttributeInternal(RECEIPTDTLID, value);
    }

    /**
     * Gets the attribute value for BuId, using the alias name BuId.
     * @return the value of BuId
     */
    public Integer getBuId() {
        return (Integer) getAttributeInternal(BUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuId.
     * @param value value to set the BuId
     */
    public void setBuId(Integer value) {
        setAttributeInternal(BUID, value);
    }

    /**
     * Gets the attribute value for ArReceiptId, using the alias name ArReceiptId.
     * @return the value of ArReceiptId
     */
    public Integer getArReceiptId() {
        return (Integer) getAttributeInternal(ARRECEIPTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ArReceiptId.
     * @param value value to set the ArReceiptId
     */
    public void setArReceiptId(Integer value) {
        setAttributeInternal(ARRECEIPTID, value);
    }

    /**
     * Gets the attribute value for AccRecInvoicesId, using the alias name AccRecInvoicesId.
     * @return the value of AccRecInvoicesId
     */
    public Integer getAccRecInvoicesId() {
        return (Integer) getAttributeInternal(ACCRECINVOICESID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccRecInvoicesId.
     * @param value value to set the AccRecInvoicesId
     */
    public void setAccRecInvoicesId(Integer value) {
        setAttributeInternal(ACCRECINVOICESID, value);
    }

    /**
     * Gets the attribute value for AmountPaid, using the alias name AmountPaid.
     * @return the value of AmountPaid
     */
    public BigDecimal getAmountPaid() {
        return (BigDecimal) getAttributeInternal(AMOUNTPAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AmountPaid.
     * @param value value to set the AmountPaid
     */
    public void setAmountPaid(BigDecimal value) {
        setAttributeInternal(AMOUNTPAID, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Date getUpdatedDate() {
        return (Date) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }


    /**
     * @param receiptDtlId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer receiptDtlId) {
        return new Key(new Object[] { receiptDtlId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        try {
            SGSAppModuleImpl am = new SGSAppModuleImpl();
            setReceiptDtlId(am.getDBSequence("SGS_AR_RECEIPT_DTL_SEQ"));
        } catch (Exception e) {
            LOG.severe(e);
        }
    }
}

