package com.sgs.model.entity;

import com.sgs.model.service.SGSAppModuleImpl;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed May 19 16:23:08 IST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SgsArReceiptImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        ArReceiptId,
        BuId,
        Amount,
        BankNumber,
        NeftNumber,
        CheckNumber,
        PaymentDate,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    private static final ADFLogger LOG = ADFLogger.createADFLogger(SgsArReceiptImpl.class);

    public static final int ARRECEIPTID = AttributesEnum.ArReceiptId.index();
    public static final int BUID = AttributesEnum.BuId.index();
    public static final int AMOUNT = AttributesEnum.Amount.index();
    public static final int BANKNUMBER = AttributesEnum.BankNumber.index();
    public static final int NEFTNUMBER = AttributesEnum.NeftNumber.index();
    public static final int CHECKNUMBER = AttributesEnum.CheckNumber.index();
    public static final int PAYMENTDATE = AttributesEnum.PaymentDate.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SgsArReceiptImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sgs.model.entity.SgsArReceipt");
    }

    /**
     * Gets the attribute value for ArReceiptId, using the alias name ArReceiptId.
     * @return the value of ArReceiptId
     */
    public Integer getArReceiptId() {
        return (Integer) getAttributeInternal(ARRECEIPTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ArReceiptId.
     * @param value value to set the ArReceiptId
     */
    public void setArReceiptId(Integer value) {
        setAttributeInternal(ARRECEIPTID, value);
    }

    /**
     * Gets the attribute value for BuId, using the alias name BuId.
     * @return the value of BuId
     */
    public Integer getBuId() {
        return (Integer) getAttributeInternal(BUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuId.
     * @param value value to set the BuId
     */
    public void setBuId(Integer value) {
        setAttributeInternal(BUID, value);
    }

    /**
     * Gets the attribute value for Amount, using the alias name Amount.
     * @return the value of Amount
     */
    public BigDecimal getAmount() {
        return (BigDecimal) getAttributeInternal(AMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Amount.
     * @param value value to set the Amount
     */
    public void setAmount(BigDecimal value) {
        setAttributeInternal(AMOUNT, value);
    }

    /**
     * Gets the attribute value for BankNumber, using the alias name BankNumber.
     * @return the value of BankNumber
     */
    public String getBankNumber() {
        return (String) getAttributeInternal(BANKNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for BankNumber.
     * @param value value to set the BankNumber
     */
    public void setBankNumber(String value) {
        setAttributeInternal(BANKNUMBER, value);
    }

    /**
     * Gets the attribute value for NeftNumber, using the alias name NeftNumber.
     * @return the value of NeftNumber
     */
    public String getNeftNumber() {
        return (String) getAttributeInternal(NEFTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for NeftNumber.
     * @param value value to set the NeftNumber
     */
    public void setNeftNumber(String value) {
        setAttributeInternal(NEFTNUMBER, value);
    }

    /**
     * Gets the attribute value for CheckNumber, using the alias name CheckNumber.
     * @return the value of CheckNumber
     */
    public String getCheckNumber() {
        return (String) getAttributeInternal(CHECKNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for CheckNumber.
     * @param value value to set the CheckNumber
     */
    public void setCheckNumber(String value) {
        setAttributeInternal(CHECKNUMBER, value);
    }

    /**
     * Gets the attribute value for PaymentDate, using the alias name PaymentDate.
     * @return the value of PaymentDate
     */
    public Date getPaymentDate() {
        return (Date) getAttributeInternal(PAYMENTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PaymentDate.
     * @param value value to set the PaymentDate
     */
    public void setPaymentDate(Date value) {
        setAttributeInternal(PAYMENTDATE, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Date getUpdatedDate() {
        return (Date) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }


    /**
     * @param arReceiptId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer arReceiptId) {
        return new Key(new Object[] { arReceiptId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        try {
            SGSAppModuleImpl am = new SGSAppModuleImpl();
            setArReceiptId(am.getDBSequence("SGS_AR_RECEIPT_SEQ"));
        } catch (Exception e) {
            LOG.severe(e);
        }
    }
}

